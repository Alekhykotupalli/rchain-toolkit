"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.privateKey = "e416638cd5a283be10a724b2b41e8f76c9e48fbbe3ccf6172bfa1293fd7ee476499819f316b7fe95d723b232ba430cf7e3b68af155eb8253905d64e1fbace058";
exports.publicKey = "499819f316b7fe95d723b232ba430cf7e3b68af155eb8253905d64e1fbace058";
// Payment
var timestamp = 1560802892221;
var term = "new hello in { hello!(\"world\") }";
var phloLimit = 1000000;
var phloPrice = 1;
exports.payment = {
    timestamp: timestamp,
    term: term,
    phloLimit: phloLimit,
    phloPrice: phloPrice
};
exports.deployDataToSign = new Uint8Array([
    18,
    32,
    110,
    101,
    119,
    32,
    104,
    101,
    108,
    108,
    111,
    32,
    105,
    110,
    32,
    123,
    32,
    104,
    101,
    108,
    108,
    111,
    33,
    40,
    34,
    119,
    111,
    114,
    108,
    100,
    34,
    41,
    32,
    125,
    24,
    189,
    179,
    232,
    184,
    182,
    45,
    56,
    1,
    64,
    192,
    132,
    61
]);
exports.hash = new Uint8Array([
    85,
    165,
    29,
    145,
    1,
    97,
    134,
    140,
    9,
    26,
    10,
    68,
    52,
    218,
    4,
    153,
    151,
    142,
    4,
    202,
    96,
    142,
    234,
    246,
    13,
    216,
    139,
    192,
    145,
    2,
    182,
    52
]);
exports.deployDataEd25519 = __assign({}, exports.payment, { deployer: Buffer.from([
        73,
        152,
        25,
        243,
        22,
        183,
        254,
        149,
        215,
        35,
        178,
        50,
        186,
        67,
        12,
        247,
        227,
        182,
        138,
        241,
        85,
        235,
        130,
        83,
        144,
        93,
        100,
        225,
        251,
        172,
        224,
        88
    ]), sig: new Uint8Array([
        26,
        161,
        223,
        177,
        161,
        240,
        251,
        253,
        60,
        57,
        221,
        81,
        24,
        231,
        21,
        37,
        189,
        222,
        180,
        56,
        224,
        131,
        198,
        54,
        124,
        202,
        72,
        139,
        71,
        237,
        165,
        138,
        202,
        255,
        223,
        20,
        184,
        2,
        71,
        198,
        176,
        187,
        84,
        64,
        208,
        46,
        47,
        179,
        58,
        254,
        142,
        79,
        145,
        18,
        98,
        148,
        239,
        72,
        106,
        9,
        93,
        183,
        255,
        14
    ]), sigAlgorithm: "ed25519" });
exports.privateName = "bba1e927af98eb698b16e5d7615f91d1337362020f77e54e16cd7923acf207ee";
